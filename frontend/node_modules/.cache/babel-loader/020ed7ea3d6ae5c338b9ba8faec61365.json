{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_FAIL } from \"../constants/userConstants\";\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItem');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {} catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["D:/E-commerce/frontend/src/actions/userActions.js"],"names":["Axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_FAIL","register","name","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token","updateUserProfile","user"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport { \r\n        USER_REGISTER_FAIL, \r\n        USER_REGISTER_REQUEST, \r\n        USER_REGISTER_SUCCESS, \r\n        USER_SIGNIN_FAIL, \r\n        USER_SIGNIN_REQUEST, \r\n        USER_SIGNIN_SUCCESS, \r\n        USER_SIGNOUT, \r\n        USER_DETAILS_REQUEST,\r\n        USER_DETAILS_SUCCESS,\r\n        USER_DETAILS_FAIL,\r\n        USER_UPDATE_PROFILE_REQUEST,\r\n        USER_UPDATE_PROFILE_FAIL} from \"../constants/userConstants\"\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\r\n    try {\r\n        const {data} = await Axios.post(\r\n            '/api/users/register', \r\n            {name, email, password}\r\n        );\r\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({type: USER_REGISTER_FAIL, \r\n        payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n};\r\nexport const signin = (email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n    try {\r\n        const {data} = await Axios.post('/api/users/signin', {email, password});\r\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({type: USER_SIGNIN_FAIL, \r\n        payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        })\r\n    }\r\n};\r\nexport const signout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItem');\r\n    localStorage.removeItem('shippingAddress');\r\n    dispatch({ type: USER_SIGNOUT});\r\n};\r\n\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\r\n    const {\r\n        userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n        const { data } = await Axios.get(`/api/users/${userId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({ type: USER_DETAILS_FAIL, payload: message });\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    dispatch({type: USER_UPDATE_PROFILE_REQUEST, payload: user});\r\n    const { userSignin: {userInfo} } = getState();\r\n    try {\r\n        \r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message;\r\n        dispatch({type: USER_UPDATE_PROFILE_FAIL, payload: message});\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}