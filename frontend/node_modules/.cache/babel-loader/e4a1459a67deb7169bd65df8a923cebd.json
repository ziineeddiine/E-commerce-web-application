{"ast":null,"code":"import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderPayReducer } from './reducers/orderReducers';\nimport { orderDetailsReducer } from './reducers/orderReducers';\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers';\nimport { userRegisterReducer, userSigninReducer } from './reducers/userReducers';\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingAddress: localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\n    paymentMethod: 'PayPal'\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["D:/E-commerce/frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","cartReducer","orderCreateReducer","orderPayReducer","orderDetailsReducer","productDetailsReducer","productListReducer","userRegisterReducer","userSigninReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","userRegister","orderCreate","orderDetails","orderPay","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,0BAApD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,4BAA1D;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,yBAAvD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADQ,GAER;AAHM,GADK;AAMjBG,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAEL,YAAY,CAACC,OAAb,CAAqB,WAArB,IACTC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADS,GAET,EAHA;AAIFK,IAAAA,eAAe,EAAEN,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACfC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADe,GAEf,EANA;AAOFM,IAAAA,aAAa,EAAE;AAPb;AANW,CAArB;AAgBA,MAAMC,OAAO,GAAGrB,eAAe,CAAC;AAC5BsB,EAAAA,WAAW,EAAEf,kBADe;AAE5BgB,EAAAA,cAAc,EAAEjB,qBAFY;AAG5BW,EAAAA,IAAI,EAAEf,WAHsB;AAI5BS,EAAAA,UAAU,EAAEF,iBAJgB;AAK5Be,EAAAA,YAAY,EAAEhB,mBALc;AAM5BiB,EAAAA,WAAW,EAAEtB,kBANe;AAO5BuB,EAAAA,YAAY,EAAErB,mBAPc;AAQ5BsB,EAAAA,QAAQ,EAAGvB;AARiB,CAAD,CAA/B;AAUA,MAAMwB,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+ChC,OAAvE;AACA,MAAMiC,KAAK,GAAGlC,WAAW,CACrBwB,OADqB,EAErBX,YAFqB,EAGrBkB,eAAe,CAAC7B,eAAe,CAACE,KAAD,CAAhB,CAHM,CAAzB;AAKA,eAAe8B,KAAf","sourcesContent":["import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderCreateReducer, orderPayReducer } from './reducers/orderReducers';\r\nimport { orderDetailsReducer } from './reducers/orderReducers';\r\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers';\r\nimport { userRegisterReducer, userSigninReducer } from './reducers/userReducers';\r\n\r\nconst initialState = {\r\n    userSignin: {\r\n        userInfo: localStorage.getItem('userInfo')\r\n        ? JSON.parse(localStorage.getItem('userInfo'))\r\n        : null,\r\n    },\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n        ? JSON.parse(localStorage.getItem('cartItems'))\r\n        : [],\r\n        shippingAddress: localStorage.getItem('shippingAddress')\r\n        ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n        : {},\r\n        paymentMethod: 'PayPal',\r\n    },\r\n};\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userSignin: userSigninReducer,\r\n    userRegister: userRegisterReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay : orderPayReducer,\r\n});\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(thunk))\r\n);\r\nexport default store;"]},"metadata":{},"sourceType":"module"}