{"ast":null,"code":"var _jsxFileName = \"D:\\\\E-commerce\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileScreen() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success: successUpdate,\n    error: errorUpdate,\n    loading: loadingUpdate\n  } = userUpdateProfile;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!user) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_RESET\n      });\n      dispatch(detailsUser(userInfo._id));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n    }\n  }, [dispatch, userInfo._id, user]);\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch update profile\n\n    if (password !== confirmPassword) {\n      alert('Confirm password is not match with the password entered');\n      dispatch(updateUserProfile({\n        userId: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 39\n        }, this), errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n          variant: \"danger\",\n          children: errorUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), successUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n          variant: \"success\",\n          children: \"Profile Updated Successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            placeholder: \"Enter password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"confirmPassword\",\n            type: \"password\",\n            placeholder: \"Enter confirm password\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProfileScreen, \"ig/X2LYQ+R2EikOWNX9FWqlV6CY=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["D:/E-commerce/frontend/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","detailsUser","updateUserProfile","LoadingBox","MessageBox","USER_UPDATE_PROFILE_RESET","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","userSignin","state","userInfo","userDetails","loading","error","user","userUpdateProfile","success","successUpdate","errorUpdate","loadingUpdate","dispatch","type","_id","submitHandler","e","preventDefault","alert","userId","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsUser, updateUserProfile } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\n\r\nexport default function ProfileScreen() {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    \r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n    const {success: successUpdate, error: errorUpdate, loading: loadingUpdate} = userUpdateProfile;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if(!user) {\r\n            dispatch({type: USER_UPDATE_PROFILE_RESET});\r\n            dispatch(detailsUser(userInfo._id));\r\n        } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n        }\r\n    }, [dispatch, userInfo._id, user]);\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // dispatch update profile\r\n        if(password !== confirmPassword) {\r\n            alert('Confirm password is not match with the password entered')\r\n            dispatch(updateUserProfile({ userId: user._id, name, email, password }))\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h1>User Profile</h1>\r\n                </div>\r\n                {loading ? (\r\n                <LoadingBox></LoadingBox>\r\n                ) : error ? (\r\n                <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                ) : (\r\n                <>\r\n                    {loadingUpdate && <LoadingBox></LoadingBox>}\r\n\r\n                    {errorUpdate && \r\n                        (\r\n                            <MessageBox variant=\"danger\">\r\n                                {errorUpdate}\r\n                            </MessageBox>\r\n                        )\r\n                    }\r\n\r\n                    {successUpdate &&\r\n                        (\r\n                            <MessageBox variant=\"success\">\r\n                                Profile Updated Successfully\r\n                            </MessageBox>\r\n                        )\r\n                    }\r\n                    <div>\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter name\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input\r\n                            id=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"confirmPassword\">confirm Password</label>\r\n                        <input\r\n                            id=\"confirmPassword\"\r\n                            type=\"password\"\r\n                            placeholder=\"Enter confirm password\"\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></input>\r\n                    </div>\r\n                    <div>\r\n                        <label />\r\n                        <button className=\"primary\" type=\"submit\">\r\n                            Update\r\n                        </button>\r\n                    </div>\r\n                </>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}